package org.stepik.week3;

import java.util.function.DoubleUnaryOperator;

/**
 * @author Nika Zurbaevi
 */
public class QuestionAnswer_3_5_7 {
    /*
     * Вопрос: Реализуйте метод, выполняющий численное интегрирование заданной функции
     * на заданном интервале по формуле левых прямоугольников.
     *
     * Функция задана объектом, реализующим интерфейс java.util.function.DoubleUnaryOperator.
     * Его метод applyAsDouble() принимает значение аргумента и возвращает значение функции в заданной точке.
     *
     * Интервал интегрирования задается его конечными точками a a a и b b b, причем a<=b a \lt = b a<=b.
     * Для получения достаточно точного результата используйте шаг сетки не больше 10−6 10^{-6} 10−6.
     *
     * Пример. Вызов
     *
     * integrate(x -> 1, 0, 10)
     *
     * должен возвращать значение 10.
     *
     * P.S. Если задача слишком легкая, то дополнительно можете реализовать динамический выбор
     * шага сетки по следующему алгоритму:
     *
     *     - Вычислить приближенное значение интеграла функции при начальном значении шага сетки (например, 1).
     *     - Вычислить приближенное значение интеграла функции при более мелком шаге сетки
     *       (например, уменьшить шаг сетки в два раза).
     *     - Если разность двух последовательных приближений интеграла функции достаточно мала,
     *       то завершаем алгоритм и возвращаем текущее приближение в качестве результата.
     *     - Иначе возвращаемся к шагу 2.
     *
     *
     * Ответ: см. ниже
     *
     */
    public static double integrate(DoubleUnaryOperator f, double a, double b) {
        int i;
        int n = 1000000;
        double result, h;
        result = 0;
        h = (b - a) / n; //Шаг сетки

        for(i = 0; i < n; i++) {
            result += f.applyAsDouble(a + h * (i + 0.5)); //Вычисляем в средней точке и добавляем в сумму
        }

        result *= h;

        return result;
    }
}
